# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Rev:r)
variables:
   - name: acrRepositoryName
     value: 'fasdas'
   - name: acrName
     value: 'sadas'
   - name: helmReleaseName
     value: 'helm'
   - name: newRelicName
     value: 'asdas'
   - name: releaseName
     value: 'release123'  #do not use '.' or '-' in the release name.
   - name: major
     value: '2'
   - name: minor
     value: '1'

pool:
  vmImage: ubuntu-latest


#Stages of pipeline
stages:
  #Validated Git Check
  - stage: 'GitCheck_${{variables.releaseName}}'
    displayName: 'Validate Pull Request'
    jobs:
      - job: 'ValidatingPR'
        displayName: 'Validate Pull Request'
        steps:
          - template: stages/pre.yaml
            parameters:
              releases: 
                - release: variables.release

name: $(variables.major).$(variables.minor)$(Rev:.r)

  #- stage: 'BuildBranchVersion_${{variables.releaseName}}'
  #  displayName: 'Build_Branch_Version_Number'
   # jobs:
     # - job: Build_Branch_Version_Number
     #   variables:
     #    prpatch: $[counter(variables['system.pullrequest.pullrequestid'], 0)]
     #     brpatch: $[counter(variables['build.sourcebranchname'], 0)]
     #  displayName: 'Build Branch Version Number Job' 
     #   steps:  
      #    - checkout: none
       #   - template: stages/build_branch_version_number.yml     


  - stage: 'Code_Validation'
    dependsOn: GitCheck_${{variables.releaseName}}
    displayName: 'JUnit and Code Coverage'   
    jobs:
      - job: 'Maven'
        displayName: 'Maven Junit/Build'
        steps:  
          - template: stages/junit_and_code_coverage_build.yml        
